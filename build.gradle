buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.21'
    id "base"
    id "maven-publish"
}

apply plugin: 'com.jfrog.bintray'

def GROUP_ID = 'com.aarsenij'
def ARTIFACT_ID = 'rucountablenouns'
def VERSION_ID = '1.4.21'
def BINTRAY_REPOSITORY = 'rucountablenouns'
def BINTRAY_ORGINIZATION = 'a-arsenij'

group GROUP_ID
version VERSION_ID

repositories {
    mavenCentral()
    jcenter()
}

kotlin {
    jvm()
    js(BOTH) {
        nodejs()
        browser()
    }
    sourceSets {
        commonMain {
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvm().compilations.test.defaultSourceSet {
            dependencies {
                implementation kotlin('test-junit')
            }
        }
    }
}

/*
Creating artifacts named "$PROJECT-$CLASSIFIER"
 */
afterEvaluate {
    project.publishing.publications.all {
        groupId = GROUP_ID
        artifactId = "$ARTIFACT_ID-$name"
    }
}

/*
Setting bintray credentials for publishing
 */
bintray {
    user = project.hasProperty('user') ? project.property('user') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('key') ? project.property('key') : System.getenv('BINTRAY_API_KEY')
    publish = false
    pkg {
        repo = BINTRAY_REPOSITORY
        name = ARTIFACT_ID
        userOrg = BINTRAY_ORGINIZATION
        licenses = ['MIT']
        version {
            name = VERSION_ID
        }
    }
}

/*
Workaround for publishing kotlin's '.module' files
 */
import com.jfrog.bintray.gradle.tasks.BintrayUploadTask
import org.gradle.api.publish.maven.internal.artifact.FileBasedMavenArtifact

tasks.withType(BintrayUploadTask) {
    doFirst {
        publishing.publications.withType(MavenPublication).forEach({ publication ->
            File moduleFile = new File(project.buildDir, "publications/${publication.name}/module.json")
            if (moduleFile.exists()) {
                publication.artifact(new FileBasedMavenArtifact(moduleFile) {
                    protected String getDefaultExtension() {
                        return 'module';
                    }
                })
            }
        })
    }
}

/*
Publishing artifacts that built via 'publishToMavenLocal' task
 */
bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "metadata"
    }
}
bintrayUpload.dependsOn publishToMavenLocal